name: 'Repo Release'
on:
  repository_dispatch:
    types: [tf_module_release]

jobs:

  tag:
    runs-on: ubuntu-latest
    name: 'Tag Releases'
    steps:

      - uses: actions/github-script@v2
        env:
          CLIENT_PAYLOAD: ${{ toJSON(github.event.client_payload) }}
        with:
          script: |
            const { owner, repo } = context.repo;
            const { sha, releases } = JSON.parse(process.env.CLIENT_PAYLOAD);

            for (const release of releases) {
              const tagName = `${release.module}-${release.newVersion}`;

              const ref = `refs/tags/${tagName}`;
              console.log('Tagging', tagName, 'as', sha);
              await github.git.createRef({ owner, repo, ref, sha });
            }

  upload:
    runs-on: ubuntu-latest
    name: 'Upload Release'
    steps:

      - uses: dawidd6/action-download-artifact@v2
        with:
          workflow: unused
          run_id: ${{ github.event.client_payload.run_id }}
          path: outputs
      - name: 'Upload the files!'
        working-directory: outputs
        env:
          AWS_ACCESS_KEY_ID: ${{secrets.OPS_C3CI_AWS_ACCESS_KEY_ID}}
          AWS_SECRET_ACCESS_KEY: ${{secrets.OPS_C3CI_AWS_SECRET_ACCESS_KEY}}
          AWS_REGION: ${{secrets.OPS_C3CI_AWS_REGION}}
        run: |
          for module in *
          do
            echo "Looking at $module"
            pwd
            pushd  $module
            pwd
            ls -Rsh .
            aws s3 cp $module.zip  s3://${{secrets.OPS_C3CI_TF_REGISTRY}}/$module-$(cat new-version.txt).zip
            popd
          done
